# -*- coding: utf-8 -*-
"""
Created on Wed May 22 08:43:51 2019

@author: zepeng_wang
"""

import time
try:
    from PIL import Image
except ImportError:
    import Image
import numpy as np
import cv2
import base64
from io import BytesIO
from keras.models import *
from keras.layers import *
from keras import backend as K

class classifier:
    def __init__(self, word_label_path, num_label_path, base_model, word_model, num_model):
        self.word_label_path = word_label_path
        self.num_label_path = num_label_path
        self.word_model = load_model(base_model) 
        self.word_model.load_weights(word_model)
        self.num_model = load_model(num_model)
        self.image = []
        self.word_location = []
        self.num_cat, self.cat_num = self.get_label_num_dict(num_label_path)
        self.words = self.get_label_wordcharc(word_label_path)
    
    def add_imagebase64(self, img_base64code):
        self.image = Image.open(BytesIO(base64.b64decode(img_base64code)))
        self.word_location = []
        
    def get_label_num_dict(self, path):
        num_word = {}
        word_num = {}
        start = 0
        fo = open(path + '/label')
        for line in fo.readlines():
            word_num[line.strip('\n')] = start
            num_word[start] = line.strip('\n')
            start += 1
        return num_word, word_num
    
    def get_label_wordcharc(self, path):
        characters = []
        fo = open(path + '/label2', encoding = 'gbk')
        for lines in fo.readlines():
            for line in lines.strip('\n'):
                characters.append(line.strip('\n'))
        return characters
 
    def image_process(self, image):        
        img = np.asarray(image.convert("L"))
        im = img.copy()
        im[im < 150] = 0
        im[im >= 150] = 255
        return im
    
    def judge_blank(self, image, location):
        i = location
        s = 0
        while i < image.size and abs(image[i] - 255.0) < 1:
            s += 1
            i += 1
        return s
    
    def is_single_row(self, image):
        hori = np.mean(image, axis = 1)
        return self.get_peek_h(hori)
    
    #将图片长度大于340的图片进行切割成多个小图
    def div_long_image(self, image):
        ans = []
        vert = np.mean(image, axis = 0)
        start = 1
        pre_v = 0
        pre_i = 0
        for i in range(len(vert)):
            if abs(vert[i] - 255.0) < 0.1 and i >= start * 320:
                ans.append(image[ :, pre_i : pre_v])
                pre_i = pre_v
                start += 1
            elif abs(vert[i] - 255.0) < 0.1 and i < start * 320:
                pre_v = i
            else:
                continue
        return ans
        
        
    def get_peek_h(self, image):
        begin = -1
        end = -1
        ans = []
        i = -1
        while i < image.size - 1:
            i += 1
            if abs(image[i] - 255.0) < 0.1 and begin == end:
                continue
            elif abs(image[i] - 255.0) >= 0.1 and begin == end:
                begin = i
            elif abs(image[i] - 255.0) < 0.1 and begin > end:
                end = i
                temp = list()
                temp.append(begin - 1)
                temp.append(end + 1)
                ans.append(temp)
                begin = end
        return ans
    
    def get_peek_v(self, image):
        begin = -1
        end = -1
        ans = []
        i = -1
        while i < image.size - 1:
            i += 1
            if abs(image[i] - 255.0) < 0.1 and begin == end:
                continue
            elif abs(image[i] - 255.0) > 0.1 and begin == end:
                begin = i
            elif abs(image[i] - 255.0) < 0.1 and self.judge_blank(image, i) >= 8 and begin > end:
                end = i
                temp = list()
                temp.append(begin - 1)
                temp.append(end + 1)
                ans.append(temp)
                begin = end
        return ans
    
    def split_image(self, image, location_h):
        ans = []
        for pairs in location_h:
            ans.append(image[pairs[0]:pairs[1]])
        return ans
    
    def vertival_divide(self, d_img):
        ans = []
        for img in d_img:
            vertical_map = np.mean(img, axis = 0)
            location_v = self.get_peek_v(vertical_map)
            ans.append(location_v)
        return ans
    
    #将图片切割为包含连续文字和数字
    def square_divide(self, image, lv):
        all_img = []
        start = 0
        for line_img in image:
            ans = []
            for pairs in lv[start]:
                img = line_img[:,pairs[0]:pairs[1]]
                im_line = self.is_single_row(img)
                if len(img) < 25:
                    if len(img[0]) < 340:
                        ans.append(img)
                    else:
                        for i in self.div_long_image(img):
                            ans.append(i)
                else:
                    if len(im_line) == 1:
                        ans.append(img[im_line[0][0] - 1 : im_line[0][1] + 1 , :])
                    else:
                        for pairs2 in im_line:
                            ans.append(img[pairs2[0]:pairs2[1] , :])
            all_img.append(ans)
            start += 1
        return all_img
        
    def square_divide2(self, image, lv):
        all_img = []
        start = 0
        for line_img in image:
            ans = []
            for pairs in lv[start]:
                img = line_img[:,pairs[0]:pairs[1]]
                ans.append(img)
            all_img.append(ans)
            start += 1
        return all_img  
    
    def divided_numbers(self, image):
        pic_v = self.get_peek_h(np.mean(image, axis = 0))
        ans = []
        for pairs in pic_v:
            img = image[:,pairs[0]:pairs[1]]
            ans.append(img)
        return ans
  
    def judge_is_number(self, img):
        div = np.mean(img,axis = 0)
        heigh = img.shape[0]
        begin = -1
        end = -1
        ans = []
        i = -1
        while i < div.size - 1:
            i += 1
            if abs(div[i] - 255.0) < 0.1 and begin == end:
                continue
            elif abs(div[i] - 255.0) > 0.1 and begin == end:
                begin = i
            elif abs(div[i] - 255.0) < 0.1 and begin > end:
                end = i
                ans.append(end - begin )
                begin = end
        for i in ans:
            if i > heigh * 0.7:
                return False
        return True
    
    #将分割好的连续字符串按顺序分割成独立的字符串
    def divide_image_table(self, all_img):
        ans = []
        for i in range(len(all_img)):
            temp = []
            for j in range(len(all_img[i])):
                if not self.judge_is_number(all_img[i][j]):
                    self.word_location.append((i,j))
                    x = all_img[i][j]
                else:
                    x = self.divided_numbers(all_img[i][j])
                temp.append(x)
            ans.append(temp)
        return ans

    def resize_pictures_white(self,image):
        size = max(len(image), len(image[0]))
        ans = np.full((size, size), 255)
        i_inter = cv2.INTER_NEAREST
        for i in range(len(image)):
            for j in range(len(image[i])):
                ans[i][j] = image[i][j]
        ans = cv2.resize(np.uint8(ans), (20, 20), interpolation = i_inter)
        return ans
    
    def find_max_num2(self, pre_img):
        ans = []
        for m in pre_img:
            index = 0
            max_pro = 0
            for i in range(0, m.size):
                if max_pro < m[i]:
                    index = i
                    max_pro = m[i]
            ans.append(self.num_cat[index])
        return ans
    
    def outcome_predict_numbers2(self, img_all):
        x = np.concatenate([x for x in img_all])
        cat = self.find_max_num2(self.num_model.predict(x))
        return cat
    
    def func_resize_image(self, image, heigh, width):
        img1 = np.full((heigh, width), 255)
        shape1 = image.shape[0]
        shape2 = image.shape[1]
        if shape1 > heigh:
            image = cv2.resize(image, (shape2, heigh), interpolation = cv2.INTER_NEAREST)
            shape1 = heigh
        if shape2 > width:
            image = cv2.resize(image, (width, shape1), interpolation = cv2.INTER_NEAREST)
            shape2 = width
        x_start = int((heigh - shape1) / 4)
        y_start = int((width - shape2) / 4)
        for i in range(shape1):
            for j in range(shape2):
                img1[i + x_start][j + y_start] = image[i][j]
        return img1
    
    def find_max_words(self, imout):
        out = []
        for i in range(len(imout)):
            tes = imout[i]
            ans = np.where(tes == np.amax(tes, axis = 0))[0][0]
            if ans < 1992:
                out.append(ans)
        return out
    
    def outcome_predict_words2(self, x_test):       
        temp = self.func_resize_image(x_test, 20, 380)       
        y_pred = self.word_model.predict((temp.reshape(20,380,1).transpose(1, 0, 2) / 255).reshape(1,380,20,1))      
        y_pred = y_pred[:,2:,:]
        out = self.find_max_words(y_pred[0])
        out = [self.words[x] for x in out]
        return out
    
    def return_inform_row2(self, all_word_divided):
        ans = []
        for i in range(len(all_word_divided)):
            row = []
            for j in range(len(all_word_divided[i])):
                line = []
                lin = []
                if (i,j) in self.word_location:
                    str_w = self.outcome_predict_words2(all_word_divided[i][j])
                    lin = str_w
                else:
                    for k in all_word_divided[i][j]:
                        line.append(np.asarray(self.resize_pictures_white(k)).reshape(1,20,20,1) / 255)
                    str_k = self.outcome_predict_numbers2(line)
                    lin = str_k
                row.append("".join(lin))
            ans.append(row)
        return ans
        
    def process_predict(self):
        #start = time.time()
        im = self.image_process(self.image)
        #print("time1:", time.time() - start)
        horizon_map = np.mean(im, axis = 1)
        location_h = self.get_peek_h(horizon_map)
        im2 = self.split_image(im, location_h)
        #start = time.time()
        location_v = self.vertival_divide(im2)
        #print("time4:", time.time() - start)
        all_img = self.square_divide(im2, location_v)
        word_divided = self.divide_image_table(all_img)
        #start = time.time()
        ans = self.return_inform_row2(word_divided)
        #print("time7:", time.time() - start)
        return ans       
    

c = classifier('/home/wzp/table/chinese','/home/wzp/table/numbers',
               'base_model39.h5','my_ctc_words51.h5','my_model11.h5')
c.add_imagebase64("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")
out = c.process_predict()
for line in out:
    print(line)
